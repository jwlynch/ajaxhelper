ad_library {

	Library for Ajax Helper Procs
	based on the dojo javascript toolkit

	@author Hamilton Chua (ham@solutiongrove.com)
	@creation-date 2006-11-05
}

namespace eval ah::dojo { }

ad_proc -private ah::dojo::load_js_sources {
	-source_list
} {
	Accepts a tcl list of sources to load.
	This source_list will be the global ajax_helper_dojo_js_sources variable.
	This script is called in the blank-master template.

	@author Hamilton Chua (ham@solutiongrove.com)	
	@creation-date 2006-11-05
} {

	set ah_base_url [ah::get_url]
	set script "<script type=\"text/javascript\" src=\"${ah_base_url}dojo-ajax/dojo.js\"></script>"
	set dojo_script ""

	foreach source $source_list {
		switch $source {
			"event" {
				append dojo_script "dojo.require(\"dojo.event.*\"); "
			}
			"io" {
				append dojo_script "dojo.require(\"dojo.io.*\"); "
			}
			"dnd" {
				append dojo_script "dojo.require(\"dojo.dnd.*\"); "
			}
			"json" {
				append dojo_script "dojo.require(\"dojo.json\"); "
			}
			"storage" {
				append dojo_script "dojo.require(\"dojo.storage.*\"); "
			}
			"lfx" {
				append dojo_script "dojo.require(\"dojo.lfx.*\"); "
			}
			"chart" {
				append dojo_script "dojo.require(\"dojo.collections.Store\"); "
				append dojo_script "dojo.require(\"dojo.charting.Chart\"); "
			}
			"widget-chart" {
				append dojo_script "dojo.require(\"dojo.widget.Chart\"); "
			}
		}
	}
	append script [ah::enclose_in_script -script $dojo_script]
	return $script

	return ""
}

ad_proc -private ah::dojo::is_js_sources_loaded {
	-js_source
} {
	This proc will loops thru source_list and check for the presence of js_source.
	If found, this proc will return 1 
	If not found, this proc will return 0

	@author Hamilton Chua (ham@solutiongrove.com)	
	@creation-date 2006-11-05
} {
	global ajax_helper_dojo_js_sources
	set state 0
	if { [info exists ajax_helper_dojo_js_sources] } {
		foreach source $ajax_helper_dojo_js_sources {
			if { [string match $source $js_source] } { 
				set state 1
				break
			}
		}
	}
	return $state
}

ad_proc -public ah::dojo::js_sources {
	{-source ""}
} {
	Generates the javascript that loads the dojo javascript sources.

	@author Hamilton Chua (ham@solutiongrove.com)	
	@creation-date 2006-11-05

} {
	set ah_base_url [ah::get_url]
	if { ![ah::dojo::is_js_sources_loaded -js_source "dojo"] } {
		set script "<script type=\"text/javascript\" src=\"${ah_base_url}dojo-ajax/dojo.js\"></script>"
	}
	set dojo_script ""

	foreach source $source_list {
		switch $source {
			"event" {
				if { ![ah::dojo::is_js_sources_loaded -js_source "event"] } {
					append dojo_script "dojo.require(\"dojo.event.*\"); "
				}
			}
			"io" {
				if { ![ah::dojo::is_js_sources_loaded -js_source "io"] } {
					append dojo_script "dojo.require(\"dojo.io.*\"); "
				}
			}
			"dnd" {
				if { ![ah::dojo::is_js_sources_loaded -js_source "dnd"] } {
					append dojo_script "dojo.require(\"dojo.dnd.*\"); "
				}
			}
			"json" {
				if { ![ah::dojo::is_js_sources_loaded -js_source "json"] } {
					append dojo_script "dojo.require(\"dojo.json\"); "
				}
			}
			"storage" {
				if { ![ah::dojo::is_js_sources_loaded -js_source "storage"] } {
					append dojo_script "dojo.require(\"dojo.storage.*\"); "
				}
			}
			"lfx" {
				if { ![ah::dojo::is_js_sources_loaded -js_source "lfx"] } {
					append dojo_script "dojo.require(\"dojo.lfx.*\"); "
				}
			}
			"chart" {
				if { ![ah::dojo::is_js_sources_loaded -js_source "chart"] } {
					append dojo_script "dojo.require(\"dojo.collections.Store\"); "
					append dojo_script "dojo.require(\"dojo.charting.Chart\"); "
				}
			}
			"widget-chart" {
				if { ![ah::dojo::is_js_sources_loaded -js_source "widget-chart"] } {
					append dojo_script "dojo.require(\"dojo.widget.Chart\"); "
				}
			}
		}
	}
	append script [ah::enclose_in_script -script $dojo_script]
	return $script
}

ad_proc -public ah::dojo::args {
	-varname:required
	-argslist:required
} {
	Builds a javascript object that holds the arguments that are commonly passed to a dojo function.
	
	@author Hamilton Chua (ham@solutiongrove.com)	
	@creation-date 2006-11-05

} {   
	set objargs [list]
	foreach args $argslist {
		lappend objargs [split ":" $args]
	}
	set objargs [split "," $objargs]
	set script "var $varname = {$objargs}; "
	return $script
}

ad_proc -public ah::dojo::iobind {
	-objargs:required
} {
	Generates the javascript that loads the dojo javascript sources.

	@author Hamilton Chua (ham@solutiongrove.com)	
	@creation-date 2006-11-05

	@param objargs A javascript object generated by ah::dojo::args which contain arguments that is passed to dojo.io.bind.
} {
	if { ![ah::dojo::is_js_sources_loaded -js_source "dojo"] } { 
		global ajax_helper_dojo_js_sources
		lappend ajax_helper_dojo_js_sources "dojo"
		if { ![ah::dojo::is_js_sources_loaded -js_source "io"] } { 
			lappend ajax_helper_dojo_js_sources "io"
		}
	}
	set script "dojo.io.bind($objargs); "
	return $script
}